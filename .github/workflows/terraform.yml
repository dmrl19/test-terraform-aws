name: 'Terraform-deploy'

on:
  push:
    branches:
    - develop
#  pull_request:
  workflow_dispatch:
    
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    # Specify the environment, where you will fetch the secrets
    environment: dev

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      working-directory: 'src/infrastructure'
      env:
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_BACKEND_REGION }}

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false #-var=region={{ secrets.AWS_DEFAULT_REGION }}
      working-directory: 'src/infrastructure'
      env:
        AWS_ACCESS_KEY:  ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_KEY:  ${{ secrets.AWS_SECRET_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        TF_VAR_region: ${{ secrets.AWS_DEFAULT_REGION }}
